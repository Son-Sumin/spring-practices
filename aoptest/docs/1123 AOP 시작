* Object Oriented Programming

** AOP(Aspect Oriented Programming)
       → 횡당관심을 한 곳에 몰고 필요 시 실행시키자
1. what; advice, 횡단관심  → 어떤 클래스의 메소드
2. when; Joing Point of Advice, 시점
       → 메소드가 실행되는 시점(자바실행을 메소드실행이라 생각하고 메소드에 집중)
            ① before; 메소드 실행 전
            ② after; 메소드 실행 후
            ③ after returning; 메소드가 실행 결과를 얻은 후
            ④ after throwing; 메소드가 실행하다 예외를 던진 후
       ** ⑤ around; 핵심관심 전후(before+after)
3. where; Poing Cut of Advice, which method
       → 어떤 package에 어떤 class의 어떤 method의 이름, 결과 등등
        where 4가지 기준; package, class, method, parameter


<<AOP 방법>>
  ** mysite03과 같이 참고
@Aspect
class {
advisor; method(advice) 중심으로 [예시]@Before(which method)가 있는 class

<<Point Cut 기술방법>>
excution( 접근자 반환타입 패키지.클래스(인터페이스).메소드(인수) ) thorws 예외

1. 접근자 생략가능
2. thorws 예외 생략가능
3. * (와일드 카드) 사용가능
4. 패키지에서의 와일드 카드는 .. 를 사용한다.
5. 메소드의 인수에서 .. 를 사용하면 모든 인수를 의미하게 된다.
6. 패키지명.클래스 명은 생략할 수 있다.



container 생성 - ApplicationContext
그 안에 bean, advisor 생성

com.bitacademy.mysite.aspect
MeasureExecutionTimeAspect